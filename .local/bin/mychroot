#!/bin/sh
# mychroot - quickly build personalized chroot.
# It does the following :
# 1. create the chroot in MYCHROOT_ROOT_FOLDER (default: /srv/chroot)
# 2. create a home repository for this chroot in MYCHROOT_HOME_FOLDER (default: $HOME/srv/chroot)
# 3. configure schroot for it
# 4. install common stuff
#
# TODO options (copy files, ...)
# TODO hook support (?)
# TODO schroot stuff

SELF=$(basename $0)
# You will need sudo to be availabe
command -v sudo >/dev/null || {
    echo "$SELF: sudo not found, exiting..."
    exit 1
}
command -v debootstrap >/dev/null || {
    echo "$SELF: deboostrap not found, exiting..."
    exit 1
}

help() {
    echo "usage: $SELF <chroot_name>"
}

info() {
    echo "$1"
}
error() {
    echo "$SELF: error: $1" >&2
}
fatal() {
    echo "$SELF: fatal: $1" >&2
    exit $2
}

test -z "$MYCHROOT_ROOT_FOLDER" && MYCHROOT_ROOT_FOLDER="/srv/chroot"
test -z "$MYCHROOT_HOME_FOLDER" && MYCHROOT_HOME_FOLDER="$HOME/srv/chroot"
test -z "$DEBIAN_MIRROR" && DEBIAN_MIRROR="http://ftp.fr.debian.org/debian"

if ! test $# -eq 2; then
    help && exit
fi
CHROOT_NAME="$1"
shift
DEBIAN_RELEASE="$1"
shift


CHROOT_FOLDER="$MYCHROOT_ROOT_FOLDER/$CHROOT_NAME"
CHROOT_HOME_FOLDER="$MYCHROOT_HOME_FOLDER/$CHROOT_NAME"

# 1. chroot with deboostrap
if test -d "$CHROOT_FOLDER" && test "$(ls -A $CHROOT_FOLDER)"; then
    error "$MYCHROOT_ROOT_FOLDER/$CHROOT_NAME already exists and is not empty, skipping bootstrap"
else
    info "> debootstraping debian $DEBIAN_RELEASE in $CHROOT_FOLDER"
    sudo mkdir -p "$CHROOT_FOLDER"
    sudo debootstrap $DEBIAN_RELEASE $CHROOT_FOLDER $DEBIAN_MIRROR
fi

# 2. chroot home folder
if test -d "$CHROOT_HOME_FOLDER"; then
    info "< $CHROOT_HOME_FOLDER already exists"
else
    mkdir "$CHROOT_HOME_FOLDER"
fi

# 3. schroot configuration if available
if test -d /etc/schroot; then

fi

# 4. Yo mamma !
